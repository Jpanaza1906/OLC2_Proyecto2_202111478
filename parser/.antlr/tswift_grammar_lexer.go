// Code generated from /home/josep-ubu/Lab_Compiladores2/OLC2_Proyecto2_202111478/parser/Tswift_Grammar.g4 by ANTLR 4.9.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 79, 543,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 4, 41, 9, 41, 4, 42, 9, 42, 4, 43, 9, 43, 4, 44,
	9, 44, 4, 45, 9, 45, 4, 46, 9, 46, 4, 47, 9, 47, 4, 48, 9, 48, 4, 49, 9,
	49, 4, 50, 9, 50, 4, 51, 9, 51, 4, 52, 9, 52, 4, 53, 9, 53, 4, 54, 9, 54,
	4, 55, 9, 55, 4, 56, 9, 56, 4, 57, 9, 57, 4, 58, 9, 58, 4, 59, 9, 59, 4,
	60, 9, 60, 4, 61, 9, 61, 4, 62, 9, 62, 4, 63, 9, 63, 4, 64, 9, 64, 4, 65,
	9, 65, 4, 66, 9, 66, 4, 67, 9, 67, 4, 68, 9, 68, 4, 69, 9, 69, 4, 70, 9,
	70, 4, 71, 9, 71, 4, 72, 9, 72, 4, 73, 9, 73, 4, 74, 9, 74, 4, 75, 9, 75,
	4, 76, 9, 76, 4, 77, 9, 77, 4, 78, 9, 78, 4, 79, 9, 79, 3, 2, 3, 2, 3,
	3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3,
	9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14,
	3, 14, 3, 15, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3,
	18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23,
	3, 23, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3,
	27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 31,
	3, 31, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 3, 33, 3,
	33, 3, 34, 3, 34, 3, 34, 3, 34, 3, 35, 3, 35, 3, 35, 3, 35, 3, 35, 3, 36,
	3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 3,
	38, 3, 38, 3, 38, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 39, 3, 40,
	3, 40, 3, 40, 3, 40, 3, 40, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3, 41, 3,
	41, 3, 41, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 42, 3, 43, 3, 43, 3, 43,
	3, 43, 3, 44, 3, 44, 3, 44, 3, 45, 3, 45, 3, 45, 3, 45, 3, 46, 3, 46, 3,
	46, 3, 46, 3, 46, 3, 46, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47, 3, 47,
	3, 47, 3, 47, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 48, 3, 49, 3,
	49, 3, 49, 3, 49, 3, 49, 3, 49, 3, 50, 3, 50, 3, 50, 3, 50, 3, 51, 3, 51,
	3, 51, 3, 51, 3, 51, 3, 51, 3, 51, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52, 3,
	52, 3, 52, 3, 52, 3, 52, 3, 52, 3, 52, 3, 53, 3, 53, 3, 53, 3, 53, 3, 53,
	3, 53, 3, 53, 3, 54, 3, 54, 3, 54, 3, 55, 3, 55, 3, 55, 3, 55, 3, 55, 3,
	55, 3, 55, 3, 55, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 56, 3, 57, 3, 57,
	3, 57, 3, 57, 3, 57, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3, 58, 3,
	58, 3, 58, 3, 58, 3, 59, 3, 59, 3, 59, 3, 59, 3, 59, 3, 59, 3, 59, 3, 60,
	3, 60, 3, 60, 3, 60, 3, 60, 3, 60, 3, 60, 3, 60, 3, 60, 3, 61, 3, 61, 3,
	61, 3, 61, 3, 61, 3, 61, 3, 62, 3, 62, 3, 62, 3, 62, 3, 62, 3, 63, 3, 63,
	3, 63, 3, 63, 3, 63, 3, 64, 3, 64, 3, 64, 3, 64, 3, 64, 3, 65, 3, 65, 3,
	65, 3, 65, 3, 66, 3, 66, 3, 66, 3, 66, 3, 66, 3, 66, 3, 67, 3, 67, 3, 67,
	3, 67, 3, 67, 3, 68, 3, 68, 3, 68, 3, 68, 3, 68, 3, 68, 3, 68, 3, 68, 3,
	68, 3, 68, 3, 69, 3, 69, 3, 69, 3, 69, 3, 69, 3, 69, 3, 69, 3, 70, 6, 70,
	457, 10, 70, 13, 70, 14, 70, 458, 3, 70, 3, 70, 3, 71, 3, 71, 3, 72, 6,
	72, 466, 10, 72, 13, 72, 14, 72, 467, 3, 73, 6, 73, 471, 10, 73, 13, 73,
	14, 73, 472, 3, 73, 3, 73, 6, 73, 477, 10, 73, 13, 73, 14, 73, 478, 3,
	74, 3, 74, 3, 74, 3, 74, 5, 74, 485, 10, 74, 3, 74, 3, 74, 3, 75, 3, 75,
	3, 75, 3, 75, 7, 75, 493, 10, 75, 12, 75, 14, 75, 496, 11, 75, 3, 75, 3,
	75, 3, 76, 3, 76, 7, 76, 502, 10, 76, 12, 76, 14, 76, 505, 11, 76, 3, 76,
	3, 76, 6, 76, 509, 10, 76, 13, 76, 14, 76, 510, 5, 76, 513, 10, 76, 3,
	77, 3, 77, 3, 77, 3, 77, 7, 77, 519, 10, 77, 12, 77, 14, 77, 522, 11, 77,
	3, 77, 3, 77, 3, 78, 3, 78, 3, 78, 3, 78, 7, 78, 530, 10, 78, 12, 78, 14,
	78, 533, 11, 78, 3, 78, 3, 78, 3, 78, 3, 78, 3, 78, 3, 79, 3, 79, 3, 79,
	3, 79, 3, 531, 2, 80, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17,
	10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35,
	19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53,
	28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71,
	37, 73, 38, 75, 39, 77, 40, 79, 41, 81, 42, 83, 43, 85, 44, 87, 45, 89,
	46, 91, 47, 93, 48, 95, 49, 97, 50, 99, 51, 101, 52, 103, 53, 105, 54,
	107, 55, 109, 56, 111, 57, 113, 58, 115, 59, 117, 60, 119, 61, 121, 62,
	123, 63, 125, 64, 127, 65, 129, 66, 131, 67, 133, 68, 135, 69, 137, 70,
	139, 71, 141, 2, 143, 72, 145, 73, 147, 74, 149, 75, 151, 76, 153, 77,
	155, 78, 157, 79, 3, 2, 9, 5, 2, 11, 12, 15, 15, 34, 34, 3, 2, 50, 59,
	4, 2, 41, 41, 94, 94, 4, 2, 36, 36, 94, 94, 5, 2, 67, 92, 97, 97, 99, 124,
	6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 4, 2, 12, 12, 15, 15, 2, 553, 2,
	3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2,
	11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2,
	2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2,
	2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2,
	2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3,
	2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49,
	3, 2, 2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2,
	57, 3, 2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2,
	2, 65, 3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2,
	2, 2, 73, 3, 2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2,
	2, 2, 2, 81, 3, 2, 2, 2, 2, 83, 3, 2, 2, 2, 2, 85, 3, 2, 2, 2, 2, 87, 3,
	2, 2, 2, 2, 89, 3, 2, 2, 2, 2, 91, 3, 2, 2, 2, 2, 93, 3, 2, 2, 2, 2, 95,
	3, 2, 2, 2, 2, 97, 3, 2, 2, 2, 2, 99, 3, 2, 2, 2, 2, 101, 3, 2, 2, 2, 2,
	103, 3, 2, 2, 2, 2, 105, 3, 2, 2, 2, 2, 107, 3, 2, 2, 2, 2, 109, 3, 2,
	2, 2, 2, 111, 3, 2, 2, 2, 2, 113, 3, 2, 2, 2, 2, 115, 3, 2, 2, 2, 2, 117,
	3, 2, 2, 2, 2, 119, 3, 2, 2, 2, 2, 121, 3, 2, 2, 2, 2, 123, 3, 2, 2, 2,
	2, 125, 3, 2, 2, 2, 2, 127, 3, 2, 2, 2, 2, 129, 3, 2, 2, 2, 2, 131, 3,
	2, 2, 2, 2, 133, 3, 2, 2, 2, 2, 135, 3, 2, 2, 2, 2, 137, 3, 2, 2, 2, 2,
	139, 3, 2, 2, 2, 2, 143, 3, 2, 2, 2, 2, 145, 3, 2, 2, 2, 2, 147, 3, 2,
	2, 2, 2, 149, 3, 2, 2, 2, 2, 151, 3, 2, 2, 2, 2, 153, 3, 2, 2, 2, 2, 155,
	3, 2, 2, 2, 2, 157, 3, 2, 2, 2, 3, 159, 3, 2, 2, 2, 5, 161, 3, 2, 2, 2,
	7, 163, 3, 2, 2, 2, 9, 165, 3, 2, 2, 2, 11, 167, 3, 2, 2, 2, 13, 169, 3,
	2, 2, 2, 15, 171, 3, 2, 2, 2, 17, 173, 3, 2, 2, 2, 19, 175, 3, 2, 2, 2,
	21, 177, 3, 2, 2, 2, 23, 179, 3, 2, 2, 2, 25, 181, 3, 2, 2, 2, 27, 183,
	3, 2, 2, 2, 29, 185, 3, 2, 2, 2, 31, 188, 3, 2, 2, 2, 33, 191, 3, 2, 2,
	2, 35, 193, 3, 2, 2, 2, 37, 195, 3, 2, 2, 2, 39, 197, 3, 2, 2, 2, 41, 199,
	3, 2, 2, 2, 43, 201, 3, 2, 2, 2, 45, 203, 3, 2, 2, 2, 47, 206, 3, 2, 2,
	2, 49, 209, 3, 2, 2, 2, 51, 212, 3, 2, 2, 2, 53, 215, 3, 2, 2, 2, 55, 217,
	3, 2, 2, 2, 57, 219, 3, 2, 2, 2, 59, 222, 3, 2, 2, 2, 61, 225, 3, 2, 2,
	2, 63, 227, 3, 2, 2, 2, 65, 233, 3, 2, 2, 2, 67, 237, 3, 2, 2, 2, 69, 241,
	3, 2, 2, 2, 71, 246, 3, 2, 2, 2, 73, 252, 3, 2, 2, 2, 75, 255, 3, 2, 2,
	2, 77, 260, 3, 2, 2, 2, 79, 267, 3, 2, 2, 2, 81, 272, 3, 2, 2, 2, 83, 280,
	3, 2, 2, 2, 85, 286, 3, 2, 2, 2, 87, 290, 3, 2, 2, 2, 89, 293, 3, 2, 2,
	2, 91, 297, 3, 2, 2, 2, 93, 303, 3, 2, 2, 2, 95, 312, 3, 2, 2, 2, 97, 319,
	3, 2, 2, 2, 99, 325, 3, 2, 2, 2, 101, 329, 3, 2, 2, 2, 103, 336, 3, 2,
	2, 2, 105, 347, 3, 2, 2, 2, 107, 354, 3, 2, 2, 2, 109, 357, 3, 2, 2, 2,
	111, 365, 3, 2, 2, 2, 113, 371, 3, 2, 2, 2, 115, 376, 3, 2, 2, 2, 117,
	386, 3, 2, 2, 2, 119, 393, 3, 2, 2, 2, 121, 402, 3, 2, 2, 2, 123, 408,
	3, 2, 2, 2, 125, 413, 3, 2, 2, 2, 127, 418, 3, 2, 2, 2, 129, 423, 3, 2,
	2, 2, 131, 427, 3, 2, 2, 2, 133, 433, 3, 2, 2, 2, 135, 438, 3, 2, 2, 2,
	137, 448, 3, 2, 2, 2, 139, 456, 3, 2, 2, 2, 141, 462, 3, 2, 2, 2, 143,
	465, 3, 2, 2, 2, 145, 470, 3, 2, 2, 2, 147, 480, 3, 2, 2, 2, 149, 488,
	3, 2, 2, 2, 151, 512, 3, 2, 2, 2, 153, 514, 3, 2, 2, 2, 155, 525, 3, 2,
	2, 2, 157, 539, 3, 2, 2, 2, 159, 160, 7, 43, 2, 2, 160, 4, 3, 2, 2, 2,
	161, 162, 7, 42, 2, 2, 162, 6, 3, 2, 2, 2, 163, 164, 7, 125, 2, 2, 164,
	8, 3, 2, 2, 2, 165, 166, 7, 127, 2, 2, 166, 10, 3, 2, 2, 2, 167, 168, 7,
	93, 2, 2, 168, 12, 3, 2, 2, 2, 169, 170, 7, 95, 2, 2, 170, 14, 3, 2, 2,
	2, 171, 172, 7, 60, 2, 2, 172, 16, 3, 2, 2, 2, 173, 174, 7, 61, 2, 2, 174,
	18, 3, 2, 2, 2, 175, 176, 7, 65, 2, 2, 176, 20, 3, 2, 2, 2, 177, 178, 7,
	46, 2, 2, 178, 22, 3, 2, 2, 2, 179, 180, 7, 48, 2, 2, 180, 24, 3, 2, 2,
	2, 181, 182, 7, 97, 2, 2, 182, 26, 3, 2, 2, 2, 183, 184, 7, 40, 2, 2, 184,
	28, 3, 2, 2, 2, 185, 186, 7, 45, 2, 2, 186, 187, 7, 63, 2, 2, 187, 30,
	3, 2, 2, 2, 188, 189, 7, 47, 2, 2, 189, 190, 7, 63, 2, 2, 190, 32, 3, 2,
	2, 2, 191, 192, 7, 63, 2, 2, 192, 34, 3, 2, 2, 2, 193, 194, 7, 49, 2, 2,
	194, 36, 3, 2, 2, 2, 195, 196, 7, 39, 2, 2, 196, 38, 3, 2, 2, 2, 197, 198,
	7, 47, 2, 2, 198, 40, 3, 2, 2, 2, 199, 200, 7, 45, 2, 2, 200, 42, 3, 2,
	2, 2, 201, 202, 7, 44, 2, 2, 202, 44, 3, 2, 2, 2, 203, 204, 7, 63, 2, 2,
	204, 205, 7, 63, 2, 2, 205, 46, 3, 2, 2, 2, 206, 207, 7, 35, 2, 2, 207,
	208, 7, 63, 2, 2, 208, 48, 3, 2, 2, 2, 209, 210, 7, 64, 2, 2, 210, 211,
	7, 63, 2, 2, 211, 50, 3, 2, 2, 2, 212, 213, 7, 62, 2, 2, 213, 214, 7, 63,
	2, 2, 214, 52, 3, 2, 2, 2, 215, 216, 7, 64, 2, 2, 216, 54, 3, 2, 2, 2,
	217, 218, 7, 62, 2, 2, 218, 56, 3, 2, 2, 2, 219, 220, 7, 40, 2, 2, 220,
	221, 7, 40, 2, 2, 221, 58, 3, 2, 2, 2, 222, 223, 7, 126, 2, 2, 223, 224,
	7, 126, 2, 2, 224, 60, 3, 2, 2, 2, 225, 226, 7, 35, 2, 2, 226, 62, 3, 2,
	2, 2, 227, 228, 7, 114, 2, 2, 228, 229, 7, 116, 2, 2, 229, 230, 7, 107,
	2, 2, 230, 231, 7, 112, 2, 2, 231, 232, 7, 118, 2, 2, 232, 64, 3, 2, 2,
	2, 233, 234, 7, 120, 2, 2, 234, 235, 7, 99, 2, 2, 235, 236, 7, 116, 2,
	2, 236, 66, 3, 2, 2, 2, 237, 238, 7, 110, 2, 2, 238, 239, 7, 103, 2, 2,
	239, 240, 7, 118, 2, 2, 240, 68, 3, 2, 2, 2, 241, 242, 7, 118, 2, 2, 242,
	243, 7, 116, 2, 2, 243, 244, 7, 119, 2, 2, 244, 245, 7, 103, 2, 2, 245,
	70, 3, 2, 2, 2, 246, 247, 7, 104, 2, 2, 247, 248, 7, 99, 2, 2, 248, 249,
	7, 110, 2, 2, 249, 250, 7, 117, 2, 2, 250, 251, 7, 103, 2, 2, 251, 72,
	3, 2, 2, 2, 252, 253, 7, 107, 2, 2, 253, 254, 7, 104, 2, 2, 254, 74, 3,
	2, 2, 2, 255, 256, 7, 103, 2, 2, 256, 257, 7, 110, 2, 2, 257, 258, 7, 117,
	2, 2, 258, 259, 7, 103, 2, 2, 259, 76, 3, 2, 2, 2, 260, 261, 7, 117, 2,
	2, 261, 262, 7, 121, 2, 2, 262, 263, 7, 107, 2, 2, 263, 264, 7, 118, 2,
	2, 264, 265, 7, 101, 2, 2, 265, 266, 7, 106, 2, 2, 266, 78, 3, 2, 2, 2,
	267, 268, 7, 101, 2, 2, 268, 269, 7, 99, 2, 2, 269, 270, 7, 117, 2, 2,
	270, 271, 7, 103, 2, 2, 271, 80, 3, 2, 2, 2, 272, 273, 7, 102, 2, 2, 273,
	274, 7, 103, 2, 2, 274, 275, 7, 104, 2, 2, 275, 276, 7, 99, 2, 2, 276,
	277, 7, 119, 2, 2, 277, 278, 7, 110, 2, 2, 278, 279, 7, 118, 2, 2, 279,
	82, 3, 2, 2, 2, 280, 281, 7, 121, 2, 2, 281, 282, 7, 106, 2, 2, 282, 283,
	7, 107, 2, 2, 283, 284, 7, 110, 2, 2, 284, 285, 7, 103, 2, 2, 285, 84,
	3, 2, 2, 2, 286, 287, 7, 104, 2, 2, 287, 288, 7, 113, 2, 2, 288, 289, 7,
	116, 2, 2, 289, 86, 3, 2, 2, 2, 290, 291, 7, 107, 2, 2, 291, 292, 7, 112,
	2, 2, 292, 88, 3, 2, 2, 2, 293, 294, 7, 48, 2, 2, 294, 295, 7, 48, 2, 2,
	295, 296, 7, 48, 2, 2, 296, 90, 3, 2, 2, 2, 297, 298, 7, 105, 2, 2, 298,
	299, 7, 119, 2, 2, 299, 300, 7, 99, 2, 2, 300, 301, 7, 116, 2, 2, 301,
	302, 7, 102, 2, 2, 302, 92, 3, 2, 2, 2, 303, 304, 7, 101, 2, 2, 304, 305,
	7, 113, 2, 2, 305, 306, 7, 112, 2, 2, 306, 307, 7, 118, 2, 2, 307, 308,
	7, 107, 2, 2, 308, 309, 7, 112, 2, 2, 309, 310, 7, 119, 2, 2, 310, 311,
	7, 103, 2, 2, 311, 94, 3, 2, 2, 2, 312, 313, 7, 116, 2, 2, 313, 314, 7,
	103, 2, 2, 314, 315, 7, 118, 2, 2, 315, 316, 7, 119, 2, 2, 316, 317, 7,
	116, 2, 2, 317, 318, 7, 112, 2, 2, 318, 96, 3, 2, 2, 2, 319, 320, 7, 100,
	2, 2, 320, 321, 7, 116, 2, 2, 321, 322, 7, 103, 2, 2, 322, 323, 7, 99,
	2, 2, 323, 324, 7, 109, 2, 2, 324, 98, 3, 2, 2, 2, 325, 326, 7, 112, 2,
	2, 326, 327, 7, 107, 2, 2, 327, 328, 7, 110, 2, 2, 328, 100, 3, 2, 2, 2,
	329, 330, 7, 99, 2, 2, 330, 331, 7, 114, 2, 2, 331, 332, 7, 114, 2, 2,
	332, 333, 7, 103, 2, 2, 333, 334, 7, 112, 2, 2, 334, 335, 7, 102, 2, 2,
	335, 102, 3, 2, 2, 2, 336, 337, 7, 116, 2, 2, 337, 338, 7, 103, 2, 2, 338,
	339, 7, 111, 2, 2, 339, 340, 7, 113, 2, 2, 340, 341, 7, 120, 2, 2, 341,
	342, 7, 103, 2, 2, 342, 343, 7, 78, 2, 2, 343, 344, 7, 99, 2, 2, 344, 345,
	7, 117, 2, 2, 345, 346, 7, 118, 2, 2, 346, 104, 3, 2, 2, 2, 347, 348, 7,
	116, 2, 2, 348, 349, 7, 103, 2, 2, 349, 350, 7, 111, 2, 2, 350, 351, 7,
	113, 2, 2, 351, 352, 7, 120, 2, 2, 352, 353, 7, 103, 2, 2, 353, 106, 3,
	2, 2, 2, 354, 355, 7, 99, 2, 2, 355, 356, 7, 118, 2, 2, 356, 108, 3, 2,
	2, 2, 357, 358, 7, 75, 2, 2, 358, 359, 7, 117, 2, 2, 359, 360, 7, 71, 2,
	2, 360, 361, 7, 111, 2, 2, 361, 362, 7, 114, 2, 2, 362, 363, 7, 118, 2,
	2, 363, 364, 7, 123, 2, 2, 364, 110, 3, 2, 2, 2, 365, 366, 7, 101, 2, 2,
	366, 367, 7, 113, 2, 2, 367, 368, 7, 119, 2, 2, 368, 369, 7, 112, 2, 2,
	369, 370, 7, 118, 2, 2, 370, 112, 3, 2, 2, 2, 371, 372, 7, 104, 2, 2, 372,
	373, 7, 119, 2, 2, 373, 374, 7, 112, 2, 2, 374, 375, 7, 101, 2, 2, 375,
	114, 3, 2, 2, 2, 376, 377, 7, 116, 2, 2, 377, 378, 7, 103, 2, 2, 378, 379,
	7, 114, 2, 2, 379, 380, 7, 103, 2, 2, 380, 381, 7, 99, 2, 2, 381, 382,
	7, 118, 2, 2, 382, 383, 7, 107, 2, 2, 383, 384, 7, 112, 2, 2, 384, 385,
	7, 105, 2, 2, 385, 116, 3, 2, 2, 2, 386, 387, 7, 117, 2, 2, 387, 388, 7,
	118, 2, 2, 388, 389, 7, 116, 2, 2, 389, 390, 7, 119, 2, 2, 390, 391, 7,
	101, 2, 2, 391, 392, 7, 118, 2, 2, 392, 118, 3, 2, 2, 2, 393, 394, 7, 111,
	2, 2, 394, 395, 7, 119, 2, 2, 395, 396, 7, 118, 2, 2, 396, 397, 7, 99,
	2, 2, 397, 398, 7, 118, 2, 2, 398, 399, 7, 107, 2, 2, 399, 400, 7, 112,
	2, 2, 400, 401, 7, 105, 2, 2, 401, 120, 3, 2, 2, 2, 402, 403, 7, 107, 2,
	2, 403, 404, 7, 112, 2, 2, 404, 405, 7, 113, 2, 2, 405, 406, 7, 119, 2,
	2, 406, 407, 7, 118, 2, 2, 407, 122, 3, 2, 2, 2, 408, 409, 7, 99, 2, 2,
	409, 410, 7, 118, 2, 2, 410, 411, 7, 113, 2, 2, 411, 412, 7, 107, 2, 2,
	412, 124, 3, 2, 2, 2, 413, 414, 7, 107, 2, 2, 414, 415, 7, 113, 2, 2, 415,
	416, 7, 118, 2, 2, 416, 417, 7, 99, 2, 2, 417, 126, 3, 2, 2, 2, 418, 419,
	7, 117, 2, 2, 419, 420, 7, 103, 2, 2, 420, 421, 7, 110, 2, 2, 421, 422,
	7, 104, 2, 2, 422, 128, 3, 2, 2, 2, 423, 424, 7, 75, 2, 2, 424, 425, 7,
	112, 2, 2, 425, 426, 7, 118, 2, 2, 426, 130, 3, 2, 2, 2, 427, 428, 7, 72,
	2, 2, 428, 429, 7, 110, 2, 2, 429, 430, 7, 113, 2, 2, 430, 431, 7, 99,
	2, 2, 431, 432, 7, 118, 2, 2, 432, 132, 3, 2, 2, 2, 433, 434, 7, 68, 2,
	2, 434, 435, 7, 113, 2, 2, 435, 436, 7, 113, 2, 2, 436, 437, 7, 110, 2,
	2, 437, 134, 3, 2, 2, 2, 438, 439, 7, 69, 2, 2, 439, 440, 7, 106, 2, 2,
	440, 441, 7, 99, 2, 2, 441, 442, 7, 116, 2, 2, 442, 443, 7, 99, 2, 2, 443,
	444, 7, 101, 2, 2, 444, 445, 7, 118, 2, 2, 445, 446, 7, 103, 2, 2, 446,
	447, 7, 116, 2, 2, 447, 136, 3, 2, 2, 2, 448, 449, 7, 85, 2, 2, 449, 450,
	7, 118, 2, 2, 450, 451, 7, 116, 2, 2, 451, 452, 7, 107, 2, 2, 452, 453,
	7, 112, 2, 2, 453, 454, 7, 105, 2, 2, 454, 138, 3, 2, 2, 2, 455, 457, 9,
	2, 2, 2, 456, 455, 3, 2, 2, 2, 457, 458, 3, 2, 2, 2, 458, 456, 3, 2, 2,
	2, 458, 459, 3, 2, 2, 2, 459, 460, 3, 2, 2, 2, 460, 461, 8, 70, 2, 2, 461,
	140, 3, 2, 2, 2, 462, 463, 9, 3, 2, 2, 463, 142, 3, 2, 2, 2, 464, 466,
	5, 141, 71, 2, 465, 464, 3, 2, 2, 2, 466, 467, 3, 2, 2, 2, 467, 465, 3,
	2, 2, 2, 467, 468, 3, 2, 2, 2, 468, 144, 3, 2, 2, 2, 469, 471, 5, 141,
	71, 2, 470, 469, 3, 2, 2, 2, 471, 472, 3, 2, 2, 2, 472, 470, 3, 2, 2, 2,
	472, 473, 3, 2, 2, 2, 473, 474, 3, 2, 2, 2, 474, 476, 7, 48, 2, 2, 475,
	477, 5, 141, 71, 2, 476, 475, 3, 2, 2, 2, 477, 478, 3, 2, 2, 2, 478, 476,
	3, 2, 2, 2, 478, 479, 3, 2, 2, 2, 479, 146, 3, 2, 2, 2, 480, 484, 7, 36,
	2, 2, 481, 485, 10, 4, 2, 2, 482, 483, 7, 94, 2, 2, 483, 485, 11, 2, 2,
	2, 484, 481, 3, 2, 2, 2, 484, 482, 3, 2, 2, 2, 485, 486, 3, 2, 2, 2, 486,
	487, 7, 36, 2, 2, 487, 148, 3, 2, 2, 2, 488, 494, 7, 36, 2, 2, 489, 493,
	10, 5, 2, 2, 490, 491, 7, 94, 2, 2, 491, 493, 11, 2, 2, 2, 492, 489, 3,
	2, 2, 2, 492, 490, 3, 2, 2, 2, 493, 496, 3, 2, 2, 2, 494, 492, 3, 2, 2,
	2, 494, 495, 3, 2, 2, 2, 495, 497, 3, 2, 2, 2, 496, 494, 3, 2, 2, 2, 497,
	498, 7, 36, 2, 2, 498, 150, 3, 2, 2, 2, 499, 503, 9, 6, 2, 2, 500, 502,
	9, 7, 2, 2, 501, 500, 3, 2, 2, 2, 502, 505, 3, 2, 2, 2, 503, 501, 3, 2,
	2, 2, 503, 504, 3, 2, 2, 2, 504, 513, 3, 2, 2, 2, 505, 503, 3, 2, 2, 2,
	506, 508, 7, 97, 2, 2, 507, 509, 9, 7, 2, 2, 508, 507, 3, 2, 2, 2, 509,
	510, 3, 2, 2, 2, 510, 508, 3, 2, 2, 2, 510, 511, 3, 2, 2, 2, 511, 513,
	3, 2, 2, 2, 512, 499, 3, 2, 2, 2, 512, 506, 3, 2, 2, 2, 513, 152, 3, 2,
	2, 2, 514, 515, 7, 49, 2, 2, 515, 516, 7, 49, 2, 2, 516, 520, 3, 2, 2,
	2, 517, 519, 10, 8, 2, 2, 518, 517, 3, 2, 2, 2, 519, 522, 3, 2, 2, 2, 520,
	518, 3, 2, 2, 2, 520, 521, 3, 2, 2, 2, 521, 523, 3, 2, 2, 2, 522, 520,
	3, 2, 2, 2, 523, 524, 8, 77, 3, 2, 524, 154, 3, 2, 2, 2, 525, 526, 7, 49,
	2, 2, 526, 527, 7, 44, 2, 2, 527, 531, 3, 2, 2, 2, 528, 530, 11, 2, 2,
	2, 529, 528, 3, 2, 2, 2, 530, 533, 3, 2, 2, 2, 531, 532, 3, 2, 2, 2, 531,
	529, 3, 2, 2, 2, 532, 534, 3, 2, 2, 2, 533, 531, 3, 2, 2, 2, 534, 535,
	7, 44, 2, 2, 535, 536, 7, 49, 2, 2, 536, 537, 3, 2, 2, 2, 537, 538, 8,
	78, 3, 2, 538, 156, 3, 2, 2, 2, 539, 540, 11, 2, 2, 2, 540, 541, 3, 2,
	2, 2, 541, 542, 8, 79, 3, 2, 542, 158, 3, 2, 2, 2, 15, 2, 458, 467, 472,
	478, 484, 492, 494, 503, 510, 512, 520, 531, 4, 8, 2, 2, 2, 3, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "')'", "'('", "'{'", "'}'", "'['", "']'", "':'", "';'", "'?'", "','",
	"'.'", "'_'", "'&'", "'+='", "'-='", "'='", "'/'", "'%'", "'-'", "'+'",
	"'*'", "'=='", "'!='", "'>='", "'<='", "'>'", "'<'", "'&&'", "'||'", "'!'",
	"'print'", "'var'", "'let'", "'true'", "'false'", "'if'", "'else'", "'switch'",
	"'case'", "'default'", "'while'", "'for'", "'in'", "'...'", "'guard'",
	"'continue'", "'return'", "'break'", "'nil'", "'append'", "'removeLast'",
	"'remove'", "'at'", "'IsEmpty'", "'count'", "'func'", "'repeating'", "'struct'",
	"'mutating'", "'inout'", "'atoi'", "'iota'", "'self'", "'Int'", "'Float'",
	"'Bool'", "'Character'", "'String'",
}

var lexerSymbolicNames = []string{
	"", "PARDER", "PARIZQ", "LLAVEIZQ", "LLAVEDER", "CORCHETEIZQ", "CORCHETEDER",
	"DOSPT", "PTCOMA", "INTERROGACION", "COMA", "PUNTO", "GUIONBAJO", "DIR",
	"MASIGUAL", "MENOSIGUAL", "IGUAL", "DIV", "MOD", "MENOS", "MAS", "POR",
	"IGUALIGUAL", "DIFERENTE", "MAYORIGUAL", "MENORIGUAL", "MAYOR", "MENOR",
	"AND", "OR", "NOT", "PRINT", "VAR", "LET", "TRUE", "FALSE", "IF", "ELSE",
	"SWITCH", "CASE", "DEFAULT", "WHILE", "FOR", "IN", "RANGO", "GUARD", "CONTINUE",
	"RETURN", "BREAK", "NIL", "APPEND", "REMOVELAST", "REMOVE", "AT", "ISEMPTY",
	"COUNT", "FUNC", "REPEATING", "STRUCT", "MUTATING", "INOUT", "ATOI", "IOTA",
	"SELF", "INT", "FLOAT", "BOOL", "CHARACTER", "STRING", "ENBLANCO", "ENTERO",
	"DECIMAL", "CARACTER", "CADENA", "ID", "UL_C", "ML_C", "ERROR",
}

var lexerRuleNames = []string{
	"PARDER", "PARIZQ", "LLAVEIZQ", "LLAVEDER", "CORCHETEIZQ", "CORCHETEDER",
	"DOSPT", "PTCOMA", "INTERROGACION", "COMA", "PUNTO", "GUIONBAJO", "DIR",
	"MASIGUAL", "MENOSIGUAL", "IGUAL", "DIV", "MOD", "MENOS", "MAS", "POR",
	"IGUALIGUAL", "DIFERENTE", "MAYORIGUAL", "MENORIGUAL", "MAYOR", "MENOR",
	"AND", "OR", "NOT", "PRINT", "VAR", "LET", "TRUE", "FALSE", "IF", "ELSE",
	"SWITCH", "CASE", "DEFAULT", "WHILE", "FOR", "IN", "RANGO", "GUARD", "CONTINUE",
	"RETURN", "BREAK", "NIL", "APPEND", "REMOVELAST", "REMOVE", "AT", "ISEMPTY",
	"COUNT", "FUNC", "REPEATING", "STRUCT", "MUTATING", "INOUT", "ATOI", "IOTA",
	"SELF", "INT", "FLOAT", "BOOL", "CHARACTER", "STRING", "ENBLANCO", "DIG",
	"ENTERO", "DECIMAL", "CARACTER", "CADENA", "ID", "UL_C", "ML_C", "ERROR",
}

type Tswift_GrammarLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewTswift_GrammarLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *Tswift_GrammarLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewTswift_GrammarLexer(input antlr.CharStream) *Tswift_GrammarLexer {
	l := new(Tswift_GrammarLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Tswift_Grammar.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// Tswift_GrammarLexer tokens.
const (
	Tswift_GrammarLexerPARDER        = 1
	Tswift_GrammarLexerPARIZQ        = 2
	Tswift_GrammarLexerLLAVEIZQ      = 3
	Tswift_GrammarLexerLLAVEDER      = 4
	Tswift_GrammarLexerCORCHETEIZQ   = 5
	Tswift_GrammarLexerCORCHETEDER   = 6
	Tswift_GrammarLexerDOSPT         = 7
	Tswift_GrammarLexerPTCOMA        = 8
	Tswift_GrammarLexerINTERROGACION = 9
	Tswift_GrammarLexerCOMA          = 10
	Tswift_GrammarLexerPUNTO         = 11
	Tswift_GrammarLexerGUIONBAJO     = 12
	Tswift_GrammarLexerDIR           = 13
	Tswift_GrammarLexerMASIGUAL      = 14
	Tswift_GrammarLexerMENOSIGUAL    = 15
	Tswift_GrammarLexerIGUAL         = 16
	Tswift_GrammarLexerDIV           = 17
	Tswift_GrammarLexerMOD           = 18
	Tswift_GrammarLexerMENOS         = 19
	Tswift_GrammarLexerMAS           = 20
	Tswift_GrammarLexerPOR           = 21
	Tswift_GrammarLexerIGUALIGUAL    = 22
	Tswift_GrammarLexerDIFERENTE     = 23
	Tswift_GrammarLexerMAYORIGUAL    = 24
	Tswift_GrammarLexerMENORIGUAL    = 25
	Tswift_GrammarLexerMAYOR         = 26
	Tswift_GrammarLexerMENOR         = 27
	Tswift_GrammarLexerAND           = 28
	Tswift_GrammarLexerOR            = 29
	Tswift_GrammarLexerNOT           = 30
	Tswift_GrammarLexerPRINT         = 31
	Tswift_GrammarLexerVAR           = 32
	Tswift_GrammarLexerLET           = 33
	Tswift_GrammarLexerTRUE          = 34
	Tswift_GrammarLexerFALSE         = 35
	Tswift_GrammarLexerIF            = 36
	Tswift_GrammarLexerELSE          = 37
	Tswift_GrammarLexerSWITCH        = 38
	Tswift_GrammarLexerCASE          = 39
	Tswift_GrammarLexerDEFAULT       = 40
	Tswift_GrammarLexerWHILE         = 41
	Tswift_GrammarLexerFOR           = 42
	Tswift_GrammarLexerIN            = 43
	Tswift_GrammarLexerRANGO         = 44
	Tswift_GrammarLexerGUARD         = 45
	Tswift_GrammarLexerCONTINUE      = 46
	Tswift_GrammarLexerRETURN        = 47
	Tswift_GrammarLexerBREAK         = 48
	Tswift_GrammarLexerNIL           = 49
	Tswift_GrammarLexerAPPEND        = 50
	Tswift_GrammarLexerREMOVELAST    = 51
	Tswift_GrammarLexerREMOVE        = 52
	Tswift_GrammarLexerAT            = 53
	Tswift_GrammarLexerISEMPTY       = 54
	Tswift_GrammarLexerCOUNT         = 55
	Tswift_GrammarLexerFUNC          = 56
	Tswift_GrammarLexerREPEATING     = 57
	Tswift_GrammarLexerSTRUCT        = 58
	Tswift_GrammarLexerMUTATING      = 59
	Tswift_GrammarLexerINOUT         = 60
	Tswift_GrammarLexerATOI          = 61
	Tswift_GrammarLexerIOTA          = 62
	Tswift_GrammarLexerSELF          = 63
	Tswift_GrammarLexerINT           = 64
	Tswift_GrammarLexerFLOAT         = 65
	Tswift_GrammarLexerBOOL          = 66
	Tswift_GrammarLexerCHARACTER     = 67
	Tswift_GrammarLexerSTRING        = 68
	Tswift_GrammarLexerENBLANCO      = 69
	Tswift_GrammarLexerENTERO        = 70
	Tswift_GrammarLexerDECIMAL       = 71
	Tswift_GrammarLexerCARACTER      = 72
	Tswift_GrammarLexerCADENA        = 73
	Tswift_GrammarLexerID            = 74
	Tswift_GrammarLexerUL_C          = 75
	Tswift_GrammarLexerML_C          = 76
	Tswift_GrammarLexerERROR         = 77
)
